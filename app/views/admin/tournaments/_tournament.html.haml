- editable   = can?(:edit, @tournament)
- manageable = can?(:manage, @tournament)
%table{class: "right-headers cushioned"}
  %tr
    %th Name
    %td= link_to_if @tournament.site =~ /^http/, @tournament.name, @tournament.site, class: "external", target: "_external"
    %td{class: "floater top", rowspan: 9}
      - if editable
        = link_to edit_admin_tournament_path(@tournament), remote: true do
          = icon_tag "edit", "Edit Tournament"
  %tr
    %th Start Date
    %td= @tournament.start
  %tr
    %th End Date
    %td= @tournament.finish
  %tr
    %th Rounds
    %td= @tournament.rounds
  %tr
    %th Federation
    %td= @tournament.fed
  %tr
    %th City
    %td= @tournament.city
  %tr
    %th Arbiter
    %td= @tournament.arbiter
  %tr
    %th Deputy
    %td= @tournament.deputy
  %tr
    %th Time Control
    %td= @tournament.time_control
  %tr
    %th Tie Break Rules
    %td{id: "show_tie_breaks"}= @tournament.tie_breaks
    %td{class: "floater"}
      - if editable
        = link_to edit_admin_tournament_path(@tournament, tie_breaks: ""), remote: true do
          = icon_tag "edit", "Edit Tie Breaks"
  %tr
    %th Ranking
    %td{id: "show_ranking"}= @tournament.ranking_summary.fetch(:description)
    %td{class: "floater"}
      - if editable
        = link_to edit_admin_tournament_path(@tournament, ranks: ""), remote: true do
          = icon_tag "rank", "Rank Tournament"
  %tr
    %th FIDE ID
    %td{id: "show_fide_id"}= render "admin/tournaments/fide_id/link"
    %td{class: "floater top", rowspan: 2}
      - if editable
        = link_to edit_admin_tournament_path(@tournament, fide_id: ""), remote: true do
          = icon_tag "edit", "Edit FIDE ID"
  %tr
    %th Upload
    %td= @tournament.upload ? link_to(@tournament.upload.created_at.strftime('%Y-%m-%d'), [:admin, @tournament.upload]) : ''
  %tr
    %th Reporter
    %td= mail_to @tournament.user.best_email, @tournament.user.name(false)
    %td{class: "floater top", rowspan: 2}
      - if manageable && editable
        = link_to edit_admin_tournament_path(@tournament, reporter: ""), remote: true do
          = icon_tag "edit", "Change Reporter"
  %tr
    %th Status
    - if @tournament.status_ok?
      %td= t(@tournament.status)
    - else
      %td{class: "error centered"}
        %a{href: "javascript: $('#dialog_status').dialog('open'); void(0)"}= t("problems")
  %tr
    %th Stage
    %td{id: "show_stage"}
      = t(@tournament.stage)
      - if @tournament.stage == "rated"
        = "(#{@tournament.iterations1}/#{@tournament.iterations2})"
    %td{class: "floater"}
      - if editable && @tournament.move_stage_options(current_user).size > 0
        = link_to edit_admin_tournament_path(@tournament, stage: ""), remote: true do
          = icon_tag "edit", "Update Stage"
  %tr
    %th Lock
    %td= @tournament.locked ? "On" : "Off"
    %th{class: "floater"}
      - if manageable
        - if @tournament.locked
          = link_to admin_tournament_path(@tournament, locked: "false"), remote: true, method: :patch do
            = icon_tag "lock", "Tournament locked"
        - else
          = link_to admin_tournament_path(@tournament, locked: "true"), remote: true, method: :patch do
            = icon_tag "unlock", "Tournament unlocked"
  %tr
    %th Rerate
    %td= @tournament.rerate ? "Yes" : "No"
    %th{class: "floater"}
      - if editable
        - if @tournament.rerate
          = link_to admin_tournament_path(@tournament, rerate: "false"), remote: true, method: :patch do
            = icon_tag "next_for_rating", "Rerate Tournament"
        - else
          = link_to admin_tournament_path(@tournament, rerate: "true"), remote: true, method: :patch do
            = icon_tag "rated", "Don't Rerate Tournament"
  - if @tournament.rorder
    %tr
      %th Rating Order
      %td
        = "#{@tournament.rorder} of #{@rordered}"
      %th{class: "floater"}
    - if last_tournament = @tournament.last_tournament
      %tr
        %th Previous Tournament
        %td
          = last_tournament.rorder
          = link_to last_tournament.name, [:admin, last_tournament]
        %td{class: "floater"}
    - if next_tournament = @tournament.next_tournament
      %tr
        %th Next Tournament
        %td
          = next_tournament.rorder
          = link_to next_tournament.name, [:admin, next_tournament]
        %td{class: "floater"}
    - if @next_for_rating
      %tr
        %th Next for Rating
        %td
          - if @next_for_rating == @tournament
            = "this tournament"
          - else
            = @next_for_rating.rorder
            = link_to @next_for_rating.name, [:admin, @next_for_rating]
        %th{class: "floater"}
    - if @tournament.stage == "rated"
      %tr
        %th First Rated
        %td= @tournament.first_rated.to_s(:db)
        %th{class: "floater"}
      - if @tournament.first_rated != @tournament.last_rated
        %tr
          %th Last Rated
          %td= @tournament.last_rated.to_s(:db)
          %th{class: "floater"}
        %tr
          %th Number of Reratings
          %td= @tournament.reratings - 1
          %th{class: "floater"}
  %tr
    %th Notes
    %td{id: "show_notes"}= render "admin/tournaments/notes/link"
    %td{class: "floater"}
      - if editable
        = link_to edit_admin_tournament_path(@tournament, notes: ""), remote: true do
          = icon_tag "edit", "Edit Notes"

%table
  %tr
    %td{class: "centered"}
      = link_to "Member View", @tournament
      - if can?(:modify, @tournament)
        •
        = link_to "FIDE", edit_admin_tournament_path(@tournament, fide: "", format: "js"), remote: true
      •
      = link_to "Export", admin_tournament_path(@tournament, format: "js"), remote: true
      - if can?(:modify, @tournament)
        - if @tournament.deletable?
          •
          = link_to "Delete", [:admin, @tournament], data: { confirm: "Are you sure you want to delete this tournament?" }, method: :delete
        - if @tournament == @next_for_rating
          •
          = link_to "Rate", admin_tournament_path(@tournament, rate: "", format: "js"), method: :patch, remote: true
          - if @tournament.next_tournament
            •
            = link_to "Rate All", admin_rating_runs_path(rating_run: { start_tournament_id: @tournament.id }), method: :post
